{
"nodes1":[{"id":0,"text":"computer science","x":300,"y":70,"reflexive":true,"level":1},
{"id":1,"text":"algorithm","x":210,"y":140,"reflexive":true,"level":1},
{"id":2,"text":"programming","x":514,"y":177,"reflexive":true,"level":1},
{"id":3,"text":"problem solving","x":120,"y":210,"reflexive":true,"level":2},
{"id":4,"text":"low-level language","x":324,"y":249,"reflexive":true,"level":2},
{"id":5,"text":"high-level language","x":526,"y":256,"reflexive":true,"level":2},
{"id":6,"text":"debugging","x":792,"y":235,"reflexive":true,"level":2},
{"id":7,"text":"machine code","x":301,"y":334,"reflexive":true,"level":2},
{"id":8,"text":"source code","x":582,"y":324,"reflexive":true,"level":2},
{"id":9,"text":"bug","x":806,"y":311,"reflexive":true,"level":2},
{"id":10,"text":"logic error","x":756,"y":408,"reflexive":true,"level":3},
{"id":11,"text":"compile-time error","x":1000,"y":346,"reflexive":true,"level":3},
{"id":12,"text":"run-time error","x":904,"y":404,"reflexive":true,"level":3},
{"id":13,"text":"interpreter","x":376,"y":417,"reflexive":true,"level":3},
{"id":14,"text":"compiler","x":609,"y":412,"reflexive":true,"level":3}],


"linkwords1":[{"id":0,"text":"is science of","x":255,"y":105},
{"id":1,"text":"for","x":165,"y":175},
{"id":2,"text":"is about","x":414,"y":126},
{"id":3,"text":"has","x":441,"y":202},
{"id":4,"text":"uses","x":638,"y":203},
{"id":5,"text":"is called","x":314,"y":299},
{"id":6,"text":"is called","x":544,"y":293},
{"id":7,"text":"to find","x":802,"y":274},
{"id":8,"text":"in","x":656,"y":316},
{"id":9,"text":"includes","x":808,"y":358},
{"id":10,"text":"into","x":338,"y":387},
{"id":11,"text":"is translated with","x":565,"y":367}],


"links1":[{"id":"a0 b0","source":"nodes[0]","target":"linkwords[0]"},
{"id":"b0 a1","source":"linkwords[0]","target":"nodes[1]"},
{"id":"a1 b1","source":"nodes[1]","target":"linkwords[1]"},
{"id":"b1 a3","source":"linkwords[1]","target":"nodes[3]"},
{"id":"a0 b2","source":"nodes[0]","target":"linkwords[2]"},
{"id":"b2 a2","source":"linkwords[2]","target":"nodes[2]"},
{"id":"a2 b3","source":"nodes[2]","target":"linkwords[3]"},
{"id":"b3 a4","source":"linkwords[3]","target":"nodes[4]"},
{"id":"b3 a5","source":"linkwords[3]","target":"nodes[5]"},
{"id":"a2 b4","source":"nodes[2]","target":"linkwords[4]"},
{"id":"b4 a6","source":"linkwords[4]","target":"nodes[6]"},
{"id":"a4 b5","source":"nodes[4]","target":"linkwords[5]"},
{"id":"b5 a7","source":"linkwords[5]","target":"nodes[7]"},
{"id":"a5 b6","source":"nodes[5]","target":"linkwords[6]"},
{"id":"b6 a8","source":"linkwords[6]","target":"nodes[8]"},
{"id":"a6 b7","source":"nodes[6]","target":"linkwords[7]"},
{"id":"b7 a9","source":"linkwords[7]","target":"nodes[9]"},
{"id":"a9 b8","source":"nodes[9]","target":"linkwords[8]"},
{"id":"b8 a8","source":"linkwords[8]","target":"nodes[8]"},
{"id":"a9 b9","source":"nodes[9]","target":"linkwords[9]"},
{"id":"b9 a10","source":"linkwords[9]","target":"nodes[10]"},
{"id":"b9 a11","source":"linkwords[9]","target":"nodes[11]"},
{"id":"b9 a12","source":"linkwords[9]","target":"nodes[12]"},
{"id":"a13 b10","source":"nodes[13]","target":"linkwords[10]"},
{"id":"b10 a7","source":"linkwords[10]","target":"nodes[7]"},
{"id":"a8 b11","source":"nodes[8]","target":"linkwords[11]"},
{"id":"b11 a13","source":"linkwords[11]","target":"nodes[13]"},
{"id":"b11 a14","source":"linkwords[11]","target":"nodes[14]"}],


"nodesNextMap1":[],


"glossaries1":[{"id":"0","target":"nodes[0]","hidden":true,"width":60,"height":80,"page":"2"},
{"id":"1","target":"nodes[1]","hidden":true,"width":60,"height":80,"page":"2"},
{"id":"2","target":"nodes[2]","hidden":true,"width":60,"height":80,"page":"2"},
{"id":"3","target":"nodes[3]","hidden":true,"width":60,"height":80,"page":"1"},
{"id":"4","target":"nodes[4]","hidden":true,"width":60,"height":80,"page":"11"},
{"id":"5","target":"nodes[5]","hidden":true,"width":60,"height":80,"page":"11"},
{"id":"6","target":"nodes[6]","hidden":true,"width":60,"height":80,"page":"11"},
{"id":"7","target":"nodes[7]","hidden":true,"width":60,"height":80,"page":"11"},
{"id":"8","target":"nodes[8]","hidden":true,"width":60,"height":80,"page":"11"},
{"id":"9","target":"nodes[9]","hidden":true,"width":60,"height":80,"page":"11"},
{"id":"10","target":"nodes[10]","hidden":true,"width":60,"height":80,"page":"27"},
{"id":"11","target":"nodes[11]","hidden":true,"width":60,"height":80,"page":"25"},
{"id":"12","target":"nodes[12]","hidden":true,"width":60,"height":80,"page":"27"},
{"id":"13","target":"nodes[13]","hidden":true,"width":60,"height":80,"page":"3"},
{"id":"14","target":"nodes[14]","hidden":true,"width":60,"height":80,"page":"3"}],


"gTexts1":[{"id":"0","text":"Computer science is the science of algorithms, including their discovery and analysis. ","target":"nodes[0]","hidden":true,"page":"2"},
{"id":"1","text":"An algorithm is a sequence of steps that specifies how to solve a problem. ","target":"nodes[1]","hidden":true,"page":"2"},
{"id":"2","text":"So you can think of programming as the process of breaking down a large, complex task into smaller and smaller subtasks. ","target":"nodes[2]","hidden":true,"page":"2"},
{"id":"3","text":"The single most important skill for a computer scientist is problem solving. It involves the ability to formulate problems, think creatively about solutions, and express solutions clearly and accurately. ","target":"nodes[3]","hidden":true,"page":"1"},
{"id":"4","text":"low-level language: A programming language that is designed to be easy for a computer to run. Also called “machine language” or “assembly language”. ","target":"nodes[4]","hidden":true,"page":"11"},
{"id":"5","text":"high-level language: A programming language that is designed to be easy for humans to read and write. ","target":"nodes[5]","hidden":true,"page":"11"},
{"id":"6","text":"debugging: The process of finding and removing errors. ","target":"nodes[6]","hidden":true,"page":"11"},
{"id":"7","text":"low-level language: A programming language that is designed to be easy for a computer to run. Also called “machine language” or “assembly language”. ","target":"nodes[7]","hidden":true,"page":"11"},
{"id":"8","text":"source code: A program in a high-level language, before being compiled. ","target":"nodes[8]","hidden":true,"page":"11"},
{"id":"9","text":"bug: An error in a program. ","target":"nodes[9]","hidden":true,"page":"11"},
{"id":"10","text":"The third type of error is the logic error. If your program has a logic error, it will compile and run without generating error messages, but it will not do the right thing. ","target":"nodes[10]","hidden":true,"page":"27"},
{"id":"11","text":"Compile-time errors occur when you violate the syntax rules of the Java language. ","target":"nodes[11]","hidden":true,"page":"25"},
{"id":"12","text":"The second type of error is a run-time error, so-called because it does not appear until after the program has started running. ","target":"nodes[12]","hidden":true,"page":"27"},
{"id":"13","text":"An interpreter reads a high-level program and executes it, meaning that it does what the program says. It processes the program a little at a time, alternately reading lines and performing computations. ","target":"nodes[13]","hidden":true,"page":"3"},
{"id":"14","text":"In contrast, a compiler reads the entire program and translates it completely before the program starts running. ","target":"nodes[14]","hidden":true,"page":"3"}],






"nodes2":[{"id":0,"text":"program","x":400,"y":40,"reflexive":true,"level":1},
    {"id":1,"text":"statement","x":400,"y":140,"reflexive":true,"level":1},
    {"id":2,"text":"conditional statement","x":234,"y":147,"reflexive":true,"level":1},
    {"id":3,"text":"chaining","x":88,"y":70,"reflexive":true,"level":2},
    {"id":4,"text":"nesting","x":58,"y":117,"reflexive":true,"level":2},
    {"id":5,"text":"relational operator","x":64,"y":177,"reflexive":true,"level":2},
    {"id":6,"text":"logical operator","x":228,"y":194,"reflexive":true,"level":2},
    {"id":7,"text":"assignment","x":258,"y":251,"reflexive":true,"level":2},
    {"id":8,"text":"declaration","x":390,"y":250,"reflexive":true,"level":2},
    {"id":9,"text":"initialization","x":518,"y":250,"reflexive":true,"level":2},
    {"id":10,"text":"print statement","x":933,"y":220,"reflexive":true,"level":2},
    {"id":11,"text":"input","x":812,"y":290,"reflexive":true,"level":2},
    {"id":12,"text":"output","x":927,"y":289,"reflexive":true,"level":2},
    {"id":13,"text":"Scanner class","x":820,"y":396,"reflexive":true,"level":3},
    {"id":14,"text":"System class","x":980,"y":390,"reflexive":true,"level":3},
    {"id":15,"text":"loop","x":639,"y":331,"reflexive":true,"level":2},
    {"id":16,"text":"loop body","x":126,"y":283,"reflexive":true,"level":3},
    {"id":17,"text":"loop variable","x":173,"y":361,"reflexive":true,"level":3},
    {"id":18,"text":"infinite loop","x":280,"y":418,"reflexive":true,"level":3},
    {"id":19,"text":"pretest loop","x":438,"y":432,"reflexive":true,"level":3},
    {"id":20,"text":"posttest loop","x":592,"y":424,"reflexive":true,"level":3}],


    "linkwords2":[{"id":0,"text":"has","x":400,"y":100},
    {"id":1,"text":"put","x":350,"y":100},
    {"id":2,"text":"has type","x":400,"y":190},
    {"id":3,"text":"has","x":150,"y":102},
    {"id":4,"text":"may use","x":151,"y":130},
    {"id":5,"text":"can have","x":160,"y":165},
    {"id":6,"text":"put first","x":508,"y":140},
    {"id":7,"text":"has","x":750,"y":185},
    {"id":8,"text":"create","x":1162,"y":156},
    {"id":9,"text":"shows","x":934,"y":253},
    {"id":10,"text":"by","x":828,"y":341},
    {"id":11,"text":"by","x":906,"y":328},
    {"id":12,"text":"contains","x":382,"y":327},
    {"id":13,"text":"has type","x":498,"y":365},
    {"id":14,"text":"can be repeated in","x":659,"y":273},
    {"id":15,"text":"into","x":1450,"y":160},
    {"id":16,"text":"declared with final type","x":1450,"y":300},
    {"id":17,"text":"has type","x":1600,"y":340}],


    "links2":[{"id":"a0 b0","source":"nodes[0]","target":"linkwords[0]"},
    {"id":"a0 b7","source":"nodes[0]","target":"linkwords[7]"},
    {"id":"b0 a1","source":"linkwords[0]","target":"nodes[1]"},
    {"id":"a1 b2","source":"nodes[1]","target":"linkwords[2]"},
    {"id":"b2 a2","source":"linkwords[2]","target":"nodes[2]"},
    {"id":"b2 a7","source":"linkwords[2]","target":"nodes[7]"},
    {"id":"b2 a8","source":"linkwords[2]","target":"nodes[8]"},
    {"id":"b2 a9","source":"linkwords[2]","target":"nodes[9]"},
    {"id":"b2 a10","source":"linkwords[2]","target":"nodes[10]"},
    {"id":"a2 b3","source":"nodes[2]","target":"linkwords[3]"},
    {"id":"a2 b4","source":"nodes[2]","target":"linkwords[4]"},
    {"id":"a2 b5","source":"nodes[2]","target":"linkwords[5]"},
    {"id":"b3 a3","source":"linkwords[3]","target":"nodes[3]"},
    {"id":"b4 a4","source":"linkwords[4]","target":"nodes[4]"},
    {"id":"b5 a5","source":"linkwords[5]","target":"nodes[5]"},
    {"id":"b5 a6","source":"linkwords[5]","target":"nodes[6]"},
    {"id":"a7 b1","source":"nodes[7]","target":"linkwords[1]"},
    {"id":"a8 b6","source":"nodes[8]","target":"linkwords[6]"},
    {"id":"a9 b8","source":"nodes[9]","target":"linkwords[8]"},
    {"id":"b7 a11","source":"linkwords[7]","target":"nodes[11]"},
    {"id":"b7 a12","source":"linkwords[7]","target":"nodes[12]"},
    {"id":"a12 b9","source":"nodes[12]","target":"linkwords[9]"},
    {"id":"b9 a10","source":"linkwords[9]","target":"nodes[10]"},
    {"id":"a11 b10","source":"nodes[11]","target":"linkwords[10]"},
    {"id":"b10 a13","source":"linkwords[10]","target":"nodes[13]"},
    {"id":"a12 b11","source":"nodes[12]","target":"linkwords[11]"},
    {"id":"b11 a14","source":"linkwords[11]","target":"nodes[14]"},
    {"id":"a1 b14","source":"nodes[1]","target":"linkwords[14]"},
    {"id":"b14 a15","source":"linkwords[14]","target":"nodes[15]"},
    {"id":"a15 b12","source":"nodes[15]","target":"linkwords[12]"},
    {"id":"a15 b13","source":"nodes[15]","target":"linkwords[13]"},
    {"id":"b12 a16","source":"linkwords[12]","target":"nodes[16]"},
    {"id":"b12 a17","source":"linkwords[12]","target":"nodes[17]"},
    {"id":"b13 a18","source":"linkwords[13]","target":"nodes[18]"},
    {"id":"b13 a19","source":"linkwords[13]","target":"nodes[19]"},
    {"id":"b13 a20","source":"linkwords[13]","target":"nodes[20]"},
    {"id":"b1 c0","source":"linkwords[1]","target":"nodesNextMap[0]"},
    {"id":"b6 c0","source":"linkwords[6]","target":"nodesNextMap[0]"},
    {"id":"b8 c1","source":"linkwords[8]","target":"nodesNextMap[1]"},
    {"id":"c0 b15","source":"nodesNextMap[0]","target":"linkwords[15]"},
    {"id":"b15 c1","source":"linkwords[15]","target":"nodesNextMap[1]"},
    {"id":"c1 b16","source":"nodesNextMap[1]","target":"linkwords[16]"},
    {"id":"b16 c2","source":"linkwords[16]","target":"nodesNextMap[2]"},
    {"id":"c1 b17","source":"nodesNextMap[1]","target":"linkwords[17]"},
    {"id":"b17 c3","source":"linkwords[17]","target":"nodesNextMap[3]"},
    {"id":"b17 c4","source":"linkwords[17]","target":"nodesNextMap[4]"},
    {"id":"b17 c5","source":"linkwords[17]","target":"nodesNextMap[5]"}],


    "nodesNextMap2":[{"id":0,"text":"value","x":1170,"y":100,"reflexive":true},
    {"id":1,"text":"variable","x":1685,"y":300,"reflexive":true},
    {"id":2,"text":"constant","x":1200,"y":300,"reflexive":true},
    {"id":3,"text":"instance variable","x":1480,"y":380,"reflexive":true},
    {"id":4,"text":"local variable","x":1600,"y":395,"reflexive":true},
    {"id":5,"text":"class variable","x":1700,"y":380,"reflexive":true}],


    "glossaries2":[{"id":"0","target":"nodes[0]","hidden":true,"width":60,"height":80,"page":"1"},
    {"id":"1","target":"nodes[1]","hidden":true,"width":60,"height":80,"page":"5"},
    {"id":"2","target":"nodes[2]","hidden":true,"width":60,"height":80,"page":"69"},
    {"id":"3","target":"nodes[3]","hidden":true,"width":60,"height":80,"page":"71"},
    {"id":"4","target":"nodes[4]","hidden":true,"width":60,"height":80,"page":"71"},
    {"id":"5","target":"nodes[5]","hidden":true,"width":60,"height":80,"page":"67"},
    {"id":"6","target":"nodes[6]","hidden":true,"width":60,"height":80,"page":"68"},
    {"id":"7","target":"nodes[7]","hidden":true,"width":60,"height":80,"page":"16"},
    {"id":"8","target":"nodes[8]","hidden":true,"width":60,"height":80,"page":"15"},
    {"id":"9","target":"nodes[9]","hidden":true,"width":60,"height":80,"page":"28"},
    {"id":"10","target":"nodes[10]","hidden":true,"width":60,"height":80,"page":"6"},
    {"id":"11","target":"nodes[11]","hidden":true,"width":60,"height":80,"page":"33"},
    {"id":"12","target":"nodes[12]","hidden":true,"width":60,"height":80,"page":"33"},
    {"id":"13","target":"nodes[13]","hidden":true,"width":60,"height":80,"page":"34"},
    {"id":"14","target":"nodes[14]","hidden":true,"width":60,"height":80,"page":"33"},
    {"id":"15","target":"nodes[15]","hidden":true,"width":60,"height":80,"page":"106"},
    {"id":"16","target":"nodes[16]","hidden":true,"width":60,"height":80,"page":"106"},
    {"id":"17","target":"nodes[17]","hidden":true,"width":60,"height":80,"page":"110"},
    {"id":"18","target":"nodes[18]","hidden":true,"width":60,"height":80,"page":"106"},
    {"id":"19","target":"nodes[19]","hidden":true,"width":60,"height":80,"page":"115"},
    {"id":"20","target":"nodes[20]","hidden":true,"width":60,"height":80,"page":"116"}],


    "gTexts2":[{"id":"0","text":"A program is a sequence of instructions that specifies how to perform a computation. ","target":"nodes[0]","hidden":true,"page":"1"},
    {"id":"1","text":"A statement is a line of code that performs a basic operation.","target":"nodes[1]","hidden":true,"page":"5"},
    {"id":"2","text":"To write useful programs, we almost always need to check conditions and react accordingly. Conditional statements give us this ability. The simplest conditional statement in Java is the if statement.","target":"nodes[2]","hidden":true,"page":"69"},
    {"id":"3","text":"Sometimes you want to check related conditions and choose one of several actions. One way to do this is by chaining a series of if and else statements.","target":"nodes[3]","hidden":true,"page":"71"},
    {"id":"4","text":"In addition to chaining, you can also make complex decisions by nesting one conditional statement inside another.","target":"nodes[4]","hidden":true,"page":"71"},
    {"id":"5","text":"Relational operators are used to check conditions like whether two values are equal, or whether one is greater than the other.","target":"nodes[5]","hidden":true,"page":"67"},
    {"id":"6","text":"Java has three logical operators: &&, ||, and !, which respectively stand for and, or, and not. The results of these operators are similar to their meanings in English.","target":"nodes[6]","hidden":true,"page":"68"},
    {"id":"7","text":"Now that we have declared variables, we want to use them to store values. We do that with an assignment statement.","target":"nodes[7]","hidden":true,"page":"16"},
    {"id":"8","text":"This statement is a declaration, because it declares that the variable named message has the type String.","target":"nodes[8]","hidden":true,"page":"15"},
    {"id":"9","text":"initialize: To assign a variable for the first time.","target":"nodes[9]","hidden":true,"page":"28"},
    {"id":"10","text":"In the hello world program, this line is a print statement that displays a message on the screen.","target":"nodes[10]","hidden":true,"page":"6"},
    {"id":"11","text":"input: Get data from the keyboard, a file, a sensor, or some other device.","target":"nodes[11]","hidden":true,"page":"33"},
    {"id":"12","text":"output: Display data on the screen, or send data to a file or other device.","target":"nodes[12]","hidden":true,"page":"33"},
    {"id":"13","text":"For example, Scanner is a class that provides methods for inputting words, numbers, and other data.","target":"nodes[13]","hidden":true,"page":"34"},
    {"id":"14","text":"System is a class that provides methods related to the “system” or environment where programs run.t","target":"nodes[14]","hidden":true,"page":"33"},
    {"id":"15","text":"This type of flow is called a loop, because the last step loops back around to the first.","target":"nodes[15]","hidden":true,"page":"106"},
    {"id":"16","text":"The statements in braces are called the body.","target":"nodes[16]","hidden":true,"page":"106"},
    {"id":"17","text":"The first line initializes a variable named i, which is going to act as a loop variable","target":"nodes[17]","hidden":true,"page":"110"},
    {"id":"18","text":"Otherwise the loop will repeat forever, which is called an infinite loop.","target":"nodes[18]","hidden":true,"page":"106"},
    {"id":"19","text":"The while and for statements are pretest loops; that is, they test the condition first and at the beginning of each pass through the loop.","target":"nodes[19]","hidden":true,"page":"115"},
    {"id":"20","text":"Java also provides a posttest loop: the do-while statement. This type of loop is useful when you need to run the body of the loop at least once.","target":"nodes[20]","hidden":true,"page":"116"}],









    "nodes3":[{"id":0,"text":"value","x":270,"y":100,"reflexive":true,"level":1},
        {"id":1,"text":"variable","x":785,"y":300,"reflexive":true,"level":1},
        {"id":2,"text":"constant","x":300,"y":300,"reflexive":true,"level":2},
        {"id":3,"text":"instance variable","x":580,"y":380,"reflexive":true,"level":3},
        {"id":4,"text":"local variable","x":700,"y":395,"reflexive":true,"level":3},
        {"id":5,"text":"class variable","x":800,"y":380,"reflexive":true,"level":3}],


        "linkwords3":[{"id":0,"text":"into","x":550,"y":160},
        {"id":1,"text":"declared with final type","x":550,"y":300},
        {"id":2,"text":"has type","x":700,"y":340},
        {"id":3,"text":"put","x":-550,"y":100},
        {"id":4,"text":"put first","x":-392,"y":140},
        {"id":5,"text":"create","x":262,"y":156},
        {"id":6,"text":"shows","x":34,"y":253},
        {"id":7,"text":"by","x":6,"y":328}],


        "links3":[{"id":"a0 b0","source":"nodes[0]","target":"linkwords[0]"},
        {"id":"b0 a1","source":"linkwords[0]","target":"nodes[1]"},
        {"id":"a1 b1","source":"nodes[1]","target":"linkwords[1]"},
        {"id":"b1 a2","source":"linkwords[1]","target":"nodes[2]"},
        {"id":"a1 b2","source":"nodes[1]","target":"linkwords[2]"},
        {"id":"b2 a3","source":"linkwords[2]","target":"nodes[3]"},
        {"id":"b2 a4","source":"linkwords[2]","target":"nodes[4]"},
        {"id":"b2 a5","source":"linkwords[2]","target":"nodes[5]"},
        {"id":"c0 b5","source":"nodesNextMap[0]","target":"linkwords[5]"},
        {"id":"b5 a1","source":"linkwords[5]","target":"nodes[1]"},
        {"id":"b3 a0","source":"linkwords[3]","target":"nodes[0]"},
        {"id":"b4 a0","source":"linkwords[4]","target":"nodes[0]"},
        {"id":"c1 b6","source":"nodesNextMap[1]","target":"linkwords[6]"},
        {"id":"b6 c2","source":"linkwords[6]","target":"nodesNextMap[2]"},
        {"id":"c2 b7","source":"nodesNextMap[2]","target":"linkwords[7]"},
        {"id":"b7 c3","source":"linkwords[7]","target":"nodesNextMap[3]"}],


        "nodesNextMap3":[{"id":0,"text":"initialization","x":-482,"y":250,"reflexive":true},
        {"id":1,"text":"print statement","x":33,"y":220,"reflexive":true},
        {"id":2,"text":"output","x":27,"y":289,"reflexive":true},
        {"id":3,"text":"System class","x":80,"y":390,"reflexive":true}],


        "glossaries3":[{"id":"0","target":"nodes[0]","hidden":true,"width":60,"height":80,"page":"15"},
        {"id":"1","target":"nodes[1]","hidden":true,"width":60,"height":80,"page":"15"},
        {"id":"2","target":"nodes[2]","hidden":true,"width":60,"height":80,"page":"38"},
        {"id":"3","target":"nodes[3]","hidden":true,"width":60,"height":80,"page":"172"},
        {"id":"4","target":"nodes[4]","hidden":true,"width":60,"height":80,"page":"56"},
        {"id":"5","target":"nodes[5]","hidden":true,"width":60,"height":80,"page":"193"}],


        "gTexts3":[{"id":"0","text":"One of the most powerful features of a programming language is the ability to define and manipulate variables. A variable is a named location that stores a value.","target":"nodes[0]","hidden":true,"page":"15"},
        {"id":"1","text":"Values may be numbers, text, images, sounds, and other types of data. To store a value, you first have to declare a variable.","target":"nodes[1]","hidden":true,"page":"15"},
        {"id":"2","text":"Variables declared as final are called constants. By convention, names for constants are all uppercase, with the underscore character (_) between words.  ","target":"nodes[2]","hidden":true,"page":"38"},
        {"id":"3","text":"Attributes are also called instance variables, because each instance has its own variables (as opposed to class variables, coming up in Section 12.3). ","target":"nodes[3]","hidden":true,"page":"172"},
        {"id":"4","text":"Because variables only exist inside the methods where they are defined, they are often called local variables. ","target":"nodes[4]","hidden":true,"page":"56"},
        {"id":"5","text":"Like instance variables, class variables are defined in a class definition, before the method definitions. Butthey are identified by the keyword static. ","target":"nodes[5]","hidden":true,"page":"193"}],

  "nodes4" : [
    { "id": 0, "text": "primitive type", "x": 450, "y": 50,  "reflexive": true, "level":1  },
    { "id": 1, "text": "wrapper class", "x": 200, "y": 220,  "reflexive": true, "level":2  },
    { "id": 2, "text": "floating point","x": 350, "y": 220,  "reflexive": true, "level":2  },
    { "id": 3, "text": "boolean", "x": 550, "y": 220,  "reflexive": true, "level": 2 },
    { "id": 4, "text": "type cast", "x": 700, "y": 220,  "reflexive": true, "level": 2  }
  ],
  "nodesNextMap4" : [],
  "linkwords4" : [

    {"id": 0,  "text" : "can be transformed with", "x": 250, "y": 120 },
    {"id": 1,  "text" : "has type", "x": 450, "y": 120 },
    {"id": 2,  "text" : "can be changed with", "x": 600, "y": 120 }
  ],
  "links4" : [
    { "id": "a0 b0", "source": "nodes[0]", "target": "linkwords[0]"},
    { "id": "a0 b1", "source": "nodes[0]", "target": "linkwords[1]"},
    { "id": "a0 b2", "source": "nodes[0]", "target": "linkwords[2]"},
    { "id": "b0 a1", "source": "linkwords[0]", "target": "nodes[1]"},
    { "id": "b1 a2", "source": "linkwords[1]", "target": "nodes[2]"},
    { "id": "b1 a3", "source": "linkwords[1]", "target": "nodes[3]"},
    { "id": "b2 a4", "source": "linkwords[2]", "target": "nodes[4]"}
    ],
  "glossaries4" : [
    { "id": "0", "target": "nodes[0]", "hidden": true, "width": 60, "height": 80, "page": "139"},
    { "id": "1", "target": "nodes[1]", "hidden": true, "width": 60, "height": 80, "page": "146"},
    { "id": "2", "target": "nodes[2]", "hidden": true, "width": 60, "height": 80, "page": "21"},
    { "id": "3", "target": "nodes[3]", "hidden": true, "width": 60, "height": 80, "page": "67"},
    { "id": "4", "target": "nodes[4]", "hidden": true, "width": 60, "height": 80, "page": "40"}
  ],
  "gTexts4" : [
    {"id": "0", "text": "Not everything in Java is an object: int, double, and boolean are so-called primitive types.", "target": "nodes[0]", "hidden": true, "page": "139"},
    {"id": "1", "text": "For each primitive type, there is a corresponding class in the Java library,called a wrapper class.", "target": "nodes[1]", "hidden": true, "page": "146"},
    {"id": "2", "text": "Floating-point numbers can represent fractions as well as integers.", "target": "nodes[2]", "hidden": true, "page": "21"},
    {"id": "3", "text": " Boolean, operators for expressing logic, and if statements", "target": "nodes[3]", "hidden": true, "page": "67"},
    {"id": "4", "text": "The simplest way to convert a floating-point value to an integer is to use a type cast", "target": "nodes[4]", "hidden": true, "page": "40"}
    ],



    "nodes5" : [
    { "id": 0, "text": "object", "x": 400, "y": 200,  "reflexive": true, "level": 1 },
    { "id": 1, "text": "new operator", "x": 450, "y": 100,  "reflexive": true, "level": 2 },
    { "id": 2, "text": "garbage collection","x": 650, "y": 200,  "reflexive": true, "level": 2 },
    { "id": 3, "text": "array", "x": 300, "y": 300,  "reflexive": true, "level": 2 },
    { "id": 4, "text": "string", "x": 500, "y": 300,  "reflexive": true, "level": 2 },
    { "id": 5, "text": "index", "x": 180, "y": 400,  "reflexive": true, "level": 3 },
    { "id": 6, "text": "element", "x": 400, "y": 400,  "reflexive": true, "level": 3 }
  ],
  "nodesNextMap5" : [],
  "linkwords5" : [

    {"id": 0,  "text" : "created by", "x": 420, "y": 150 },
    {"id": 1,  "text" : "can be reclaimed by", "x": 520, "y": 200 },
    {"id": 2,  "text" : "has", "x": 400, "y": 250 },
    {"id": 3,  "text" : "contains", "x": 300, "y": 350 },
    {"id": 4, "text": "indicated by", "x": 300 ,"y": 400 }
  ],
  "links5" : [
    { "id": "a0 b0", "source": "nodes[0]", "target": "linkwords[0]"},
    { "id": "a0 b1", "source": "nodes[0]", "target": "linkwords[1]"},
    { "id": "a0 b2", "source": "nodes[0]", "target": "linkwords[2]"},
    { "id": "b0 a1", "source": "linkwords[0]", "target": "nodes[1]"},
    { "id": "b1 a2", "source": "linkwords[1]", "target": "nodes[2]"},
    { "id": "b2 a3", "source": "linkwords[2]", "target": "nodes[3]"},
    { "id": "b2 a4", "source": "linkwords[2]", "target": "nodes[4]"},
    { "id": "a3 b3", "source": "nodes[3]", "target": "linkwords[3]"},
    { "id": "b3 a5", "source": "linkwords[3]", "target": "nodes[5]"},
    { "id": "b3 a6", "source": "linkwords[3]", "target": "nodes[6]"},
    { "id": "a6 b4", "source": "nodes[6]", "target": "linkwords[4]"},
    { "id": "b4 a5", "source": "linkwords[4]", "target": "nodes[5]"}
  ],
  "glossaries5" : [
    { "id": "0", "target": "nodes[0]", "hidden": true, "width": 60, "height": 80, "page": "139"},
    { "id": "1", "target": "nodes[1]", "hidden": true, "width": 60, "height": 80, "page": "156"},
    { "id": "2", "target": "nodes[2]", "hidden": true, "width": 60, "height": 80, "page": "162"},
    { "id": "3", "target": "nodes[3]", "hidden": true, "width": 60, "height": 80, "page": "123"},
    { "id": "4", "target": "nodes[4]", "hidden": true, "width": 60, "height": 80, "page": "6"},
    { "id": "5", "target": "nodes[5]", "hidden": true, "width": 60, "height": 80, "page": "124"},
    { "id": "6", "target": "nodes[6]", "hidden": true, "width": 60, "height": 80, "page": "123"}
  ],
  "gTexts5" : [
    {"id": "0", "text": "An object is a collection of data\nthat provides a set of methods.", "target": "nodes[0]", "hidden": true, "page": "139"},
    {"id": "1", "text": "The result of the new operator is a reference to the new object.", "target": "nodes[1]", "hidden": true, "page": "156"},
    {"id": "2", "text": "The system automatically looks for stranded objects and reclaims them; then the space can be reused for new objects. This process is called garbage collection", "target": "nodes[2]", "hidden": true, "page": "162"},
    {"id": "3", "text": " An array is a sequence of values.", "target": "nodes[3]", "hidden": true, "page": "123"},
    {"id": "4", "text": "Phrases that appear in quotation marks are called strings.", "target": "nodes[4]", "hidden": true, "page": "6"},
    {"id": "5", "text": "The small numbers outside the boxes are the indexes (or indices) used to identify each location in the array", "target": "nodes[5]", "hidden": true, "page": "124"},
    {"id": "6", "text": "The values in the array are called elements", "target": "nodes[6]", "hidden": true, "page": "123"}
  ],

  "nodes6" : [
	{ "id": 0, "text": "class","x": 400, "y": 200,  "reflexive": true, "level": 1},
	{ "id": 1, "text": "package","x": 210, "y": 140,  "reflexive": true, "level": 2},
	{ "id": 2, "text": "comment","x": 350, "y": 160,  "reflexive": true, "level": 2},
	{ "id": 3, "text": "composition","x": 120, "y": 210,  "reflexive": true, "level": 2},
	{ "id": 4, "text": "inheritance","x": 270, "y": 230,  "reflexive": true, "level": 2},
	{ "id": 5, "text": "java library","x": 410, "y": 230,  "reflexive": true, "level": 2},
	{ "id": 6, "text": "tag","x": 480, "y": 210,  "reflexive": true, "level": 3},
	{ "id": 7, "text": "Java Doc","x": 230, "y": 300,  "reflexive": true, "level": 3}
  ],
  "nodesNextMap6" : [],
  "linkwords6" : [
    {"id": 0,  "text" : "forms", "x": 400, "y": 200 },
    {"id": 1,  "text" : "can have", "x": 400, "y": 250 },
    {"id": 2,  "text" : "can be from", "x": 300, "y": 350 },
	{"id": 3, "text": "has type of relationships", "x": 300 ,"y": 400 },
	{"id": 4,  "text" : "begin with", "x": 300, "y": 350 },
    {"id": 5, "text": "organized by", "x": 300 ,"y": 400 }
  ],
  "links6" : [
    { "id": "a0 b0", "source": "nodes[0]", "target": "linkwords[0]"},
    { "id": "a0 b1", "source": "nodes[0]", "target": "linkwords[1]"},
	{ "id": "a0 b2", "source": "nodes[0]", "target": "linkwords[2]"},
    { "id": "a0 b3", "source": "nodes[0]", "target": "linkwords[3]"},
    { "id": "b0 a1", "source": "linkwords[0]", "target": "nodes[1]"},
    { "id": "b1 a2", "source": "linkwords[1]", "target": "nodes[2]"},
    { "id": "b2 a3", "source": "linkwords[2]", "target": "nodes[5]"},
	{ "id": "b3 a4", "source": "linkwords[3]", "target": "nodes[3]"},
	{ "id": "b3 a5", "source": "linkwords[3]", "target": "nodes[4]"},
	{ "id": "a2 b4", "source": "nodes[2]", "target": "linkwords[4]"},
	{ "id": "a2 b5", "source": "nodes[2]", "target": "linkwords[5]"},
    { "id": "b4 a6", "source": "linkwords[4]", "target": "nodes[6]"},
    { "id": "b5 a7", "source": "linkwords[5]", "target": "nodes[7]"}
  ],
  "glossaries6" : [
    { "id": "0", "target": "nodes[0]", "hidden": true, "width": 60, "height": 80, "page": "5"},
    { "id": "1", "target": "nodes[1]", "hidden": true, "width": 60, "height": 80, "page": "33"},
    { "id": "2", "target": "nodes[2]", "hidden": true, "width": 60, "height": 80, "page": "11"},
    { "id": "3", "target": "nodes[3]", "hidden": true, "width": 60, "height": 80, "page": "24"},
    { "id": "4", "target": "nodes[4]", "hidden": true, "width": 60, "height": 80, "page": "230"},
    { "id": "5", "target": "nodes[5]", "hidden": true, "width": 60, "height": 80, "page": "34"},
	{ "id": "6", "target": "nodes[6]", "hidden": true, "width": 60, "height": 80, "page": "94"},
	{ "id": "7", "target": "nodes[7]", "hidden": true, "width": 60, "height": 80, "page": "61"}
  ],
  "gTexts6" : [
    {"id": "0", "text": "A class is a collection of methods.", "target": "nodes[0]", "hidden": true, "page": "5"},
    {"id": "1", "text": "A package is a collection of related classes; java.io contains classes for “I/O” which stands for input and output.", "target": "nodes[1]", "hidden": true, "page": "33"},
    {"id": "2", "text": "A part of a program that contains information about the program but has no effect when the program runs.", "target": "nodes[2]", "hidden": true, "page": "11"},
    {"id": "3", "text": "One of the most useful features of programming languages is their ability to take small building blocks and compose them.", "target": "nodes[3]", "hidden": true, "page": "24"},
    {"id": "4", "text": "One class extends another class. For example, Hand extends CardCollection, so every instance of Hand is also a CardCollection.", "target": "nodes[4]", "hidden": true, "page": "230"},
    {"id": "5", "text": "System is defined in a file called System.java, and PrintStream is defined in PrintStream.java. These files are part of the Java library, which is an extensive collection of classes you can use in your programs.", "target": "nodes[5]", "hidden": true, "page": "34"},
	{"id": "6", "text": "To organize the documentation into sections, Javadoc supports optional tags that begin with the at sign (@). For example, we can use @param and @return to provide additional information about parameters and return values.", "target": "nodes[6]", "hidden": true, "page": "94"},
	{"id": "7", "text": "If you include documentation in your source code, you can extract it automatically, and generate well-formatted HTML, using a tool called Javadoc.", "target": "nodes[7]", "hidden": true, "page": "61"}
  ],

  "nodes7" : [
	{ "id": 0, "text": "method","x": 400, "y": 200,  "reflexive": true, "level": 1},
	{ "id": 1, "text": "void method","x": 210, "y": 140,  "reflexive": true, "level": 2},
	{ "id": 2, "text": "value method","x": 350, "y": 160,  "reflexive": true, "level": 2},
	{ "id": 3, "text": "argument","x": 120, "y": 210,  "reflexive": true, "level": 2},
	{ "id": 4, "text": "parameter","x": 270, "y": 230,  "reflexive": true, "level": 2},
	{ "id": 5, "text": "constructor","x": 410, "y": 230,  "reflexive": true, "level": 2}
  ],
  "nodesNextMap7" : [],
  "linkwords7" : [
    {"id": 0,  "text" : "has type", "x": 400, "y": 200 },
    {"id": 1,  "text" : "can have", "x": 400, "y": 250 },
    {"id": 2,  "text" : "can require", "x": 300, "y": 350 },
	{"id": 3, "text": "is", "x": 300 ,"y": 400 },
	{"id": 4,  "text" : "same type with", "x": 300, "y": 350 }
  ],
  "links7" : [
    { "id": "a0 b0", "source": "nodes[0]", "target": "linkwords[0]"},
    { "id": "a0 b1", "source": "nodes[0]", "target": "linkwords[1]"},
	{ "id": "a0 b2", "source": "nodes[0]", "target": "linkwords[2]"},
	{ "id": "a0 b3", "source": "nodes[0]", "target": "linkwords[3]"},
	{ "id": "b0 a1", "source": "linkwords[0]", "target": "nodes[1]"},
	{ "id": "b0 a2", "source": "linkwords[0]", "target": "nodes[2]"},
    { "id": "b1 a3", "source": "linkwords[1]", "target": "nodes[3]"},
    { "id": "b2 a4", "source": "linkwords[2]", "target": "nodes[4]"},
	{ "id": "b3 a5", "source": "linkwords[3]", "target": "nodes[5]"},
	{ "id": "a3 b4", "source": "nodes[3]", "target": "linkwords[4]"},
	{ "id": "b4 a4", "source": "linkwords[4]", "target": "nodes[4]"}
  ],
  "glossaries7" : [
    { "id": "0", "target": "nodes[0]", "hidden": true, "width": 60, "height": 80, "page": "5"},
    { "id": "1", "target": "nodes[1]", "hidden": true, "width": 60, "height": 80, "page": "85"},
    { "id": "2", "target": "nodes[2]", "hidden": true, "width": 60, "height": 80, "page": "85"},
    { "id": "3", "target": "nodes[3]", "hidden": true, "width": 60, "height": 80, "page": "49"},
    { "id": "4", "target": "nodes[4]", "hidden": true, "width": 60, "height": 80, "page": "52"},
    { "id": "5", "target": "nodes[5]", "hidden": true, "width": 60, "height": 80, "page": "173"}
  ],
  "gTexts7" : [
    {"id": "0", "text": "A method is a named sequence of statements.", "target": "nodes[0]", "hidden": true, "page": "5"},
    {"id": "1", "text": "All the methods we have written so far have been void; that is, they don’t return values.", "target": "nodes[1]", "hidden": true, "page": "85"},
    {"id": "2", "text": "The methods that return values, which we call value methods.", "target": "nodes[2]", "hidden": true, "page": "85"},
    {"id": "3", "text": "You evaluate the expression in parentheses, which is called the argument of the function. Then you can evaluate the function itself, maybe by punching it into a calculator.", "target": "nodes[3]", "hidden": true, "page": "49"},
    {"id": "4", "text": "The parentheses after the method name contain a list of variables, called parameters, where the method stores its arguments.", "target": "nodes[4]", "hidden": true, "page": "52"},
    {"id": "5", "text": "The syntax for constructors is similar to that of other methods, except: The name of the constructor is the same as the name of the class. Constructors have no return type (and no return value).The keyword static is omitted. ", "target": "nodes[5]", "hidden": true, "page": "173"}
  ]


    }
